version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "5001:5000"
    environment:
      - FLASK_CONFIG=development
      - FLASK_DEBUG=1
      - DATABASE_URL=sqlite:///instance/dev_app.db
    volumes:
      - .:/app
      - /app/__pycache__
      - /app/.mypy_cache
    command: python run.py
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    networks:
      - flask-dev-network

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=flask_dev
      - POSTGRES_USER=flask_user
      - POSTGRES_PASSWORD=flask_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U flask_user -d flask_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - flask-dev-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - flask-dev-network

networks:
  flask-dev-network:
    driver: bridge

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
